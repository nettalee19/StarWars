{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avidan.moshe\\\\Desktop\\\\Appleseeds\\\\Projects\\\\starw\\\\starw\\\\src\\\\Components\\\\Part1.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Part1() {\n  _s();\n\n  const [vehicles, setVehicles] = useState([]);\n  const [pilots, setPilots] = useState([]);\n\n  const getVehicles = async () => {\n    const response = await axios.get('https://swapi.py4e.com/api/vehicles');\n    console.log(response.data.results);\n    setVehicles(response.data.results);\n  };\n\n  useEffect(() => {\n    getVehicles();\n  }, []);\n\n  function findPilots(vehicles) {\n    setPilots(vehicles.filter(pilot => pilot.pilotes != null));\n  }\n\n  findPilots(vehicles);\n\n  function largestVehicle(vehicles) {\n    let largestV = vehicles.reduce(function (prev, current) {\n      return prev.passengers > current.passengers ? prev : current;\n    });\n    console.log(largestV);\n    return largestV;\n  }\n\n  largestVehicle(vehicles);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Part 1:\", vehicles.map(vehicle => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [vehicle.name, \" \", vehicle.passengers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Part1, \"JFzvMFbnubnlexKGeyOFd2VZjVo=\");\n\n_c = Part1;\nexport default Part1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Part1\");","map":{"version":3,"sources":["C:/Users/avidan.moshe/Desktop/Appleseeds/Projects/starw/starw/src/Components/Part1.jsx"],"names":["React","useState","useEffect","axios","Part1","vehicles","setVehicles","pilots","setPilots","getVehicles","response","get","console","log","data","results","findPilots","filter","pilot","pilotes","largestVehicle","largestV","reduce","prev","current","passengers","map","vehicle","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMQ,WAAW,GAAG,YAAU;AAE1B,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,qCAAV,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,OAA1B;AAEAT,IAAAA,WAAW,CAACI,QAAQ,CAACI,IAAT,CAAcC,OAAf,CAAX;AACH,GAND;;AAQAb,EAAAA,SAAS,CAAC,MAAK;AAEXO,IAAAA,WAAW;AAEd,GAJQ,EAIN,EAJM,CAAT;;AAOA,WAASO,UAAT,CAAoBX,QAApB,EAA6B;AACzBG,IAAAA,SAAS,CAACH,QAAQ,CAACY,MAAT,CAAgBC,KAAK,IAAIA,KAAK,CAACC,OAAN,IAAiB,IAA1C,CAAD,CAAT;AACH;;AACDH,EAAAA,UAAU,CAACX,QAAD,CAAV;;AAEA,WAASe,cAAT,CAAyBf,QAAzB,EAAmC;AAC/B,QAAIgB,QAAQ,GAAGhB,QAAQ,CAACiB,MAAT,CAAgB,UAASC,IAAT,EAAeC,OAAf,EAAwB;AACnD,aAAQD,IAAI,CAACE,UAAL,GAAkBD,OAAO,CAACC,UAA3B,GAAyCF,IAAzC,GAAgDC,OAAvD;AACH,KAFc,CAAf;AAGAZ,IAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACA,WAAOA,QAAP;AACH;;AACDD,EAAAA,cAAc,CAAEf,QAAF,CAAd;AAIA,sBACI;AAAA,0BAGKA,QAAQ,CAACqB,GAAT,CAAaC,OAAO,IAAI;AACtB,0BAAO;AAAA,mBAAMA,OAAO,CAACC,IAAd,OAAqBD,OAAO,CAACF,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAGF,KAJA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAnDQrB,K;;KAAAA,K;AAqDT,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport axios from \"axios\"\r\n\r\nfunction Part1() {\r\n\r\n    const [vehicles, setVehicles] = useState([])\r\n    const [pilots, setPilots] = useState([])\r\n\r\n    const getVehicles = async() =>{\r\n        \r\n        const response = await axios.get('https://swapi.py4e.com/api/vehicles')\r\n        console.log(response.data.results)\r\n\r\n        setVehicles(response.data.results)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        \r\n        getVehicles()\r\n        \r\n    }, [])\r\n\r\n\r\n    function findPilots(vehicles){\r\n        setPilots(vehicles.filter(pilot => pilot.pilotes != null))\r\n    }\r\n    findPilots(vehicles)\r\n    \r\n    function largestVehicle (vehicles) {\r\n        let largestV = vehicles.reduce(function(prev, current) {\r\n            return (prev.passengers > current.passengers) ? prev : current\r\n        })\r\n        console.log(largestV)\r\n        return largestV\r\n    }\r\n    largestVehicle (vehicles)\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            Part 1:\r\n            \r\n            {vehicles.map(vehicle => {\r\n               return <div>{vehicle.name} {vehicle.passengers}\r\n               </div> \r\n               \r\n            })}\r\n\r\n            \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Part1\r\n"]},"metadata":{},"sourceType":"module"}