{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avidan.moshe\\\\Desktop\\\\Appleseeds\\\\Projects\\\\starw\\\\starw\\\\src\\\\Components\\\\Part1.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseEndpoint = `https://swapi.py4e.com/api`; //const usersEndpoint = `${baseEndpoint}/people`;\n//const plenetEndpoint = `${baseEndpoint}/planets`;\n\nfunction Part1() {\n  _s();\n\n  const [vehicles, setVehicles] = useState([]);\n  const [pilots, setPilots] = useState([]);\n\n  const getVehicles = async () => {\n    const response = await axios.get(`${baseEndpoint}/vehicles`);\n    console.log(response.data.results);\n    setVehicles(response.data.results);\n  };\n\n  useEffect(() => {\n    getVehicles();\n  }, []);\n\n  async function getPilotsDetails(allPilots) {\n    let pilotsDetailed = []; // for(let i = 0; i < allPilots.length; i++){\n    //     const response = await axios.get(`i`)\n    //     pilotsDetailed.push(response)\n    // }\n  } // const getPilotsDetails = async(allPilots) =>{\n  //     const response = await axios.get(pilot)\n  //     allPilots.forEach(pilot =>{\n  //     })\n  // }\n\n\n  function getPilots(vehiclesWithPilots) {\n    console.log(vehiclesWithPilots);\n    let allPilots = [];\n    vehiclesWithPilots.forEach(vehicle => {\n      allPilots.push(vehicle.pilots);\n    });\n    console.log(allPilots);\n    getPilotsDetails(allPilots); //const response = await axios.get(vehiclesWithPilots.)\n  }\n\n  function findPilots(vehicles) {\n    let vehiclesWithPilots = [];\n    vehiclesWithPilots = vehicles.filter(vehicle => vehicle.pilots.length >= 1);\n    console.log(vehiclesWithPilots);\n    getPilots(vehiclesWithPilots);\n  }\n\n  findPilots(vehicles); // function largestVehicle (vehicles) {\n  //     let largestV = vehicles.reduce(function(prev, current) {\n  //         return (prev.passengers > current.passengers) ? prev : current\n  //     })\n  //     console.log(largestV)\n  //     return largestV\n  // }\n  // largestVehicle (vehicles)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Part 1:\", vehicles.map(vehicle => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [vehicle.name, \" \", vehicle.passengers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 23\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Part1, \"JFzvMFbnubnlexKGeyOFd2VZjVo=\");\n\n_c = Part1;\nexport default Part1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Part1\");","map":{"version":3,"sources":["C:/Users/avidan.moshe/Desktop/Appleseeds/Projects/starw/starw/src/Components/Part1.jsx"],"names":["React","useState","useEffect","axios","baseEndpoint","Part1","vehicles","setVehicles","pilots","setPilots","getVehicles","response","get","console","log","data","results","getPilotsDetails","allPilots","pilotsDetailed","getPilots","vehiclesWithPilots","forEach","vehicle","push","findPilots","filter","length","map","name","passengers"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAI,4BAAtB,C,CACA;AACA;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMS,WAAW,GAAG,YAAU;AAE1B,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAER,YAAa,WAA1B,CAAvB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,OAA1B;AAEAT,IAAAA,WAAW,CAACI,QAAQ,CAACI,IAAT,CAAcC,OAAf,CAAX;AACH,GAND;;AAQAd,EAAAA,SAAS,CAAC,MAAK;AAEXQ,IAAAA,WAAW;AAEd,GAJQ,EAIN,EAJM,CAAT;;AAQA,iBAAeO,gBAAf,CAAiCC,SAAjC,EAA2C;AACvC,QAAIC,cAAc,GAAG,EAArB,CADuC,CAEvC;AACA;AACA;AACA;AACH,GA3BY,CA6Bb;AACA;AACA;AACA;AACA;;;AAGA,WAASC,SAAT,CAAmBC,kBAAnB,EAAsC;AAClCR,IAAAA,OAAO,CAACC,GAAR,CAAYO,kBAAZ;AACA,QAAIH,SAAS,GAAG,EAAhB;AAEAG,IAAAA,kBAAkB,CAACC,OAAnB,CAA2BC,OAAO,IAAG;AACjCL,MAAAA,SAAS,CAACM,IAAV,CAAeD,OAAO,CAACf,MAAvB;AACH,KAFD;AAIAK,IAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;AACAD,IAAAA,gBAAgB,CAACC,SAAD,CAAhB,CATkC,CAUlC;AACH;;AAED,WAASO,UAAT,CAAoBnB,QAApB,EAA6B;AACzB,QAAIe,kBAAkB,GAAG,EAAzB;AACAA,IAAAA,kBAAkB,GAAGf,QAAQ,CAACoB,MAAT,CAAgBH,OAAO,IAAIA,OAAO,CAACf,MAAR,CAAemB,MAAf,IAAyB,CAApD,CAArB;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYO,kBAAZ;AACAD,IAAAA,SAAS,CAACC,kBAAD,CAAT;AACH;;AACDI,EAAAA,UAAU,CAACnB,QAAD,CAAV,CAvDa,CAyDb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,sBACI;AAAA,0BAGKA,QAAQ,CAACsB,GAAT,CAAaL,OAAO,IAAI;AACtB,0BAAO;AAAA,mBAAMA,OAAO,CAACM,IAAd,OAAqBN,OAAO,CAACO,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAGF,KAJA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAnFQzB,K;;KAAAA,K;AAqFT,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport axios from \"axios\"\r\n\r\nconst baseEndpoint = `https://swapi.py4e.com/api`;\r\n//const usersEndpoint = `${baseEndpoint}/people`;\r\n//const plenetEndpoint = `${baseEndpoint}/planets`;\r\n\r\nfunction Part1() {\r\n\r\n    const [vehicles, setVehicles] = useState([])\r\n    const [pilots, setPilots] = useState([])\r\n\r\n    const getVehicles = async() =>{\r\n        \r\n        const response = await axios.get(`${baseEndpoint}/vehicles`)\r\n        console.log(response.data.results)\r\n\r\n        setVehicles(response.data.results)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        \r\n        getVehicles()\r\n        \r\n    }, [])\r\n\r\n\r\n\r\n    async function getPilotsDetails (allPilots){\r\n        let pilotsDetailed = []\r\n        // for(let i = 0; i < allPilots.length; i++){\r\n        //     const response = await axios.get(`i`)\r\n        //     pilotsDetailed.push(response)\r\n        // }\r\n    }\r\n\r\n    // const getPilotsDetails = async(allPilots) =>{\r\n    //     const response = await axios.get(pilot)\r\n    //     allPilots.forEach(pilot =>{\r\n    //     })\r\n    // }\r\n\r\n\r\n    function getPilots(vehiclesWithPilots){\r\n        console.log(vehiclesWithPilots)\r\n        let allPilots = []\r\n\r\n        vehiclesWithPilots.forEach(vehicle =>{\r\n            allPilots.push(vehicle.pilots)\r\n        })\r\n\r\n        console.log(allPilots)\r\n        getPilotsDetails(allPilots)\r\n        //const response = await axios.get(vehiclesWithPilots.)\r\n    }\r\n\r\n    function findPilots(vehicles){\r\n        let vehiclesWithPilots = []\r\n        vehiclesWithPilots = vehicles.filter(vehicle => vehicle.pilots.length >= 1)\r\n        console.log(vehiclesWithPilots)\r\n        getPilots(vehiclesWithPilots)\r\n    }\r\n    findPilots(vehicles)\r\n    \r\n    // function largestVehicle (vehicles) {\r\n    //     let largestV = vehicles.reduce(function(prev, current) {\r\n    //         return (prev.passengers > current.passengers) ? prev : current\r\n    //     })\r\n    //     console.log(largestV)\r\n    //     return largestV\r\n    // }\r\n    // largestVehicle (vehicles)\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            Part 1:\r\n            \r\n            {vehicles.map(vehicle => {\r\n               return <div>{vehicle.name} {vehicle.passengers}\r\n               </div> \r\n               \r\n            })}\r\n\r\n            \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Part1\r\n"]},"metadata":{},"sourceType":"module"}