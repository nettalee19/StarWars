{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avidan.moshe\\\\Desktop\\\\Appleseeds\\\\Projects\\\\starw\\\\starw\\\\src\\\\Components\\\\Part2.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Part2() {\n  _s();\n\n  const [planets, setPlanets] = useState([]);\n  const [wantedPlanets, setwantedPlanets] = useState([]);\n\n  const getPlanets = async () => {\n    const response = await axios.get(`https://swapi.py4e.com/api/planets`);\n    console.log(response.data.results);\n    filterWantedPlanets(response.data.results); //setPlanets(response.data.results)\n  };\n\n  useEffect(() => {\n    getPlanets();\n  }, []);\n\n  function filterWantedPlanets(planets) {\n    let filteredPlanets = [];\n    filteredPlanets = planets.filter(planet => planet.population >= 200000 && planet.population <= 45000000000 && planet.rotation_period < 27);\n    console.log(filteredPlanets);\n    setPlanets(filteredPlanets); //setwantedPlanets(filteredPlanets)\n    // let wantedData = []\n    // filteredPlanets.forEach(planet =>{\n    //     wantedData.push(planet.name, planet.population)\n    //     wantedData.push(planet.population)\n    // })\n    // console.log(wantedData)\n  } //filterWantedPlanets(planets)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"this is part 2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Part2, \"l4nVCfyMPv307DSzZrjfcmiewCQ=\");\n\n_c = Part2;\nexport default Part2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Part2\");","map":{"version":3,"sources":["C:/Users/avidan.moshe/Desktop/Appleseeds/Projects/starw/starw/src/Components/Part2.jsx"],"names":["React","useState","useEffect","axios","Part2","planets","setPlanets","wantedPlanets","setwantedPlanets","getPlanets","response","get","console","log","data","results","filterWantedPlanets","filteredPlanets","filter","planet","population","rotation_period"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMQ,UAAU,GAAG,YAAU;AAEzB,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,oCAAX,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,OAA1B;AAEAC,IAAAA,mBAAmB,CAACN,QAAQ,CAACI,IAAT,CAAcC,OAAf,CAAnB,CALyB,CAMzB;AACH,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAK;AAEXO,IAAAA,UAAU;AAEb,GAJQ,EAIN,EAJM,CAAT;;AAOA,WAASO,mBAAT,CAA6BX,OAA7B,EAAqC;AACjC,QAAIY,eAAe,GAAG,EAAtB;AACAA,IAAAA,eAAe,GAAGZ,OAAO,CAACa,MAAR,CAAeC,MAAM,IAAMA,MAAM,CAACC,UAAP,IAAqB,MAArB,IAA+BD,MAAM,CAACC,UAAP,IAAqB,WAArD,IAAsED,MAAM,CAACE,eAAP,GAAyB,EAAzH,CAAlB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYI,eAAZ;AAEAX,IAAAA,UAAU,CAACW,eAAD,CAAV,CALiC,CAMjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACH,GAlCY,CAmCb;;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1CQb,K;;KAAAA,K;AA4CT,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport axios from \"axios\"\r\n\r\nfunction Part2() {\r\n    const [planets, setPlanets] = useState([])\r\n    const [wantedPlanets, setwantedPlanets] = useState([])\r\n    \r\n    const getPlanets = async() =>{\r\n        \r\n        const response = await axios.get(`https://swapi.py4e.com/api/planets`)\r\n        console.log(response.data.results)\r\n\r\n        filterWantedPlanets(response.data.results)\r\n        //setPlanets(response.data.results)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        \r\n        getPlanets()\r\n        \r\n    }, [])\r\n\r\n\r\n    function filterWantedPlanets(planets){\r\n        let filteredPlanets = []\r\n        filteredPlanets = planets.filter(planet => ((planet.population >= 200000 && planet.population <= 45000000000) && (planet.rotation_period < 27)))\r\n        console.log(filteredPlanets)\r\n\r\n        setPlanets(filteredPlanets)\r\n        //setwantedPlanets(filteredPlanets)\r\n        \r\n        // let wantedData = []\r\n        // filteredPlanets.forEach(planet =>{\r\n        //     wantedData.push(planet.name, planet.population)\r\n        //     wantedData.push(planet.population)\r\n        // })\r\n        // console.log(wantedData)\r\n    }\r\n    //filterWantedPlanets(planets)\r\n    \r\n    return (\r\n        <div>\r\n            this is part 2\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Part2\r\n"]},"metadata":{},"sourceType":"module"}