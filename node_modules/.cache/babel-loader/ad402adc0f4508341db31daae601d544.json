{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avidan.moshe\\\\Desktop\\\\Appleseeds\\\\Projects\\\\starw\\\\starw\\\\src\\\\Components\\\\Part2.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Part2() {\n  _s();\n\n  const [planets, setPlanets] = useState([]);\n\n  const getPlanets = async () => {\n    const response = await axios.get(`https://swapi.py4e.com/api/planets`);\n    let allPlanets = response.data.results;\n    filterWantedPlanets(allPlanets);\n  };\n\n  useEffect(() => {\n    getPlanets();\n  }, []);\n\n  function filterWantedPlanets(allPlanets) {\n    let filteredPlanets = [];\n    filteredPlanets = allPlanets.filter(planet => planet.population >= 200000 && planet.population <= 45000000000 && planet.rotation_period < 27);\n    setPlanets(filteredPlanets);\n    console.log(planets);\n  }\n\n  const SVG_WIDTH = 400;\n  const SVG_HEIGHT = 300;\n\n  function App() {\n    const x0 = 50;\n    const xAxisLength = SVG_WIDTH - x0 * 2;\n    const y0 = 50;\n    const yAxisLength = SVG_HEIGHT - y0 * 2;\n    const xAxisY = y0 + yAxisLength; // const dataYMax = planets.reduce(\n    //     (currMax, [_, dataY]) => Math.max(currMax, dataY),\n    //     -Infinity\n    //   );\n\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: SVG_WIDTH,\n      height: SVG_HEIGHT,\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: x0,\n        y1: xAxisY,\n        x2: x0 + xAxisLength,\n        y2: xAxisY,\n        stroke: \"grey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: x0 + xAxisLength + 5,\n        y: xAxisY + 4,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: x0,\n        y1: y0,\n        x2: x0,\n        y2: y0 + yAxisLength,\n        stroke: \"grey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: x0,\n        y: y0 - 8,\n        textAnchor: \"middle\",\n        children: \"y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Part 2\", /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), planets.map(planet => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [planet.name, \" \", planet.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Part2, \"von7Z1r3F3hAxnvSjQX44zZhN8s=\");\n\n_c = Part2;\nexport default Part2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Part2\");","map":{"version":3,"sources":["C:/Users/avidan.moshe/Desktop/Appleseeds/Projects/starw/starw/src/Components/Part2.jsx"],"names":["React","useState","useEffect","axios","Part2","planets","setPlanets","getPlanets","response","get","allPlanets","data","results","filterWantedPlanets","filteredPlanets","filter","planet","population","rotation_period","console","log","SVG_WIDTH","SVG_HEIGHT","App","x0","xAxisLength","y0","yAxisLength","xAxisY","map","name"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport axios from \"axios\"\r\n\r\nfunction Part2() {\r\n    const [planets, setPlanets] = useState([])\r\n\r\n    const getPlanets = async() =>{\r\n        \r\n        const response = await axios.get(`https://swapi.py4e.com/api/planets`)\r\n\r\n        let allPlanets = response.data.results\r\n\r\n        filterWantedPlanets(allPlanets)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        \r\n        getPlanets()\r\n        \r\n    }, [])\r\n\r\n\r\n    function filterWantedPlanets(allPlanets){\r\n        let filteredPlanets = []\r\n        filteredPlanets = allPlanets.filter(planet => ((planet.population >= 200000 && planet.population <= 45000000000) && (planet.rotation_period < 27)))\r\n\r\n        setPlanets(filteredPlanets)\r\n        console.log(planets)\r\n        \r\n    }\r\n\r\n    const SVG_WIDTH = 400;\r\n    const SVG_HEIGHT = 300;\r\n\r\n    function App(){\r\n        const x0 = 50;\r\n        const xAxisLength = SVG_WIDTH - x0 * 2;\r\n\r\n        const y0 = 50;\r\n        const yAxisLength = SVG_HEIGHT - y0 * 2;\r\n\r\n        const xAxisY = y0 + yAxisLength;\r\n\r\n        // const dataYMax = planets.reduce(\r\n        //     (currMax, [_, dataY]) => Math.max(currMax, dataY),\r\n        //     -Infinity\r\n        //   );\r\n\r\n        return (\r\n            <svg width={SVG_WIDTH} height={SVG_HEIGHT}>\r\n              {/* X axis */}\r\n              <line\r\n                x1={x0}\r\n                y1={xAxisY}\r\n                x2={x0 + xAxisLength}\r\n                y2={xAxisY}\r\n                stroke=\"grey\"\r\n              />\r\n              <text x={x0 + xAxisLength + 5} y={xAxisY + 4}>\r\n                x\r\n              </text>\r\n        \r\n              {/* Y axis */}\r\n              <line x1={x0} y1={y0} x2={x0} y2={y0 + yAxisLength} stroke=\"grey\" />\r\n              <text x={x0} y={y0 - 8} textAnchor=\"middle\">\r\n                y\r\n              </text>\r\n            </svg>\r\n          );\r\n    }\r\n\r\n\r\n    \r\n\r\n    \r\n    return (\r\n        <div>\r\n            Part 2\r\n\r\n            <App/>\r\n\r\n           \r\n\r\n            {planets.map(planet => {\r\n               return <div>{planet.name} {planet.population}\r\n               </div> \r\n               \r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Part2\r\n"]},"metadata":{},"sourceType":"module"}