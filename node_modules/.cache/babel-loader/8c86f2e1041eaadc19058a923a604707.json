{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avidan.moshe\\\\Desktop\\\\Appleseeds\\\\Projects\\\\starw\\\\starw\\\\src\\\\Components\\\\Part2.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Part2() {\n  _s();\n\n  const [planets, setPlanets] = useState([]);\n\n  const getPlanets = async () => {\n    const response = await axios.get(`https://swapi.py4e.com/api/planets`);\n    let allPlanets = response.data.results;\n    filterWantedPlanets(allPlanets);\n  };\n\n  useEffect(() => {\n    getPlanets();\n  }, []);\n\n  function filterWantedPlanets(allPlanets) {\n    let filteredPlanets = [];\n    filteredPlanets = allPlanets.filter(planet => planet.population >= 200000 && planet.population <= 45000000000 && planet.rotation_period < 27);\n    setPlanets(filteredPlanets);\n    console.log(planets);\n  }\n\n  function BarGroup(planets) {\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      className: \"bar-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"name-label\",\n        children: planets.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"value-label\",\n        children: planets.population\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"this is part 2\", /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"800\",\n      height: \"300\",\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), planets.map(planet => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [planet.name, \" \", planet.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Part2, \"von7Z1r3F3hAxnvSjQX44zZhN8s=\");\n\n_c = Part2;\nexport default Part2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Part2\");","map":{"version":3,"sources":["C:/Users/avidan.moshe/Desktop/Appleseeds/Projects/starw/starw/src/Components/Part2.jsx"],"names":["React","useState","useEffect","axios","Part2","planets","setPlanets","getPlanets","response","get","allPlanets","data","results","filterWantedPlanets","filteredPlanets","filter","planet","population","rotation_period","console","log","BarGroup","name","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMM,UAAU,GAAG,YAAU;AAEzB,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,oCAAX,CAAvB;AAEA,QAAIC,UAAU,GAAGF,QAAQ,CAACG,IAAT,CAAcC,OAA/B;AAEAC,IAAAA,mBAAmB,CAACH,UAAD,CAAnB;AACH,GAPD;;AASAR,EAAAA,SAAS,CAAC,MAAK;AAEXK,IAAAA,UAAU;AAEb,GAJQ,EAIN,EAJM,CAAT;;AAOA,WAASM,mBAAT,CAA6BH,UAA7B,EAAwC;AACpC,QAAII,eAAe,GAAG,EAAtB;AACAA,IAAAA,eAAe,GAAGJ,UAAU,CAACK,MAAX,CAAkBC,MAAM,IAAMA,MAAM,CAACC,UAAP,IAAqB,MAArB,IAA+BD,MAAM,CAACC,UAAP,IAAqB,WAArD,IAAsED,MAAM,CAACE,eAAP,GAAyB,EAA5H,CAAlB;AAEAZ,IAAAA,UAAU,CAACQ,eAAD,CAAV;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AAEH;;AAED,WAASgB,QAAT,CAAkBhB,OAAlB,EAA2B;AACvB,wBAAO;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA,8BACL;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,kBAA8BA,OAAO,CAACiB;AAAtC;AAAA;AAAA;AAAA;AAAA,cADK,eAEL;AAAA;AAAA;AAAA;AAAA,cAFK,eAGL;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BjB,OAAO,CAACY;AAAvC;AAAA;AAAA;AAAA;AAAA,cAHK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAKD;;AAIH,sBACI;AAAA,8CAGI;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,MAAM,EAAC,KAAxB;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,EAQKZ,OAAO,CAACkB,GAAR,CAAYP,MAAM,IAAI;AACpB,0BAAO;AAAA,mBAAMA,MAAM,CAACM,IAAb,OAAoBN,MAAM,CAACC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAGF,KAJA,CARL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAtDQb,K;;KAAAA,K;AAwDT,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport axios from \"axios\"\r\n\r\nfunction Part2() {\r\n    const [planets, setPlanets] = useState([])\r\n\r\n    const getPlanets = async() =>{\r\n        \r\n        const response = await axios.get(`https://swapi.py4e.com/api/planets`)\r\n\r\n        let allPlanets = response.data.results\r\n\r\n        filterWantedPlanets(allPlanets)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        \r\n        getPlanets()\r\n        \r\n    }, [])\r\n\r\n\r\n    function filterWantedPlanets(allPlanets){\r\n        let filteredPlanets = []\r\n        filteredPlanets = allPlanets.filter(planet => ((planet.population >= 200000 && planet.population <= 45000000000) && (planet.rotation_period < 27)))\r\n\r\n        setPlanets(filteredPlanets)\r\n        console.log(planets)\r\n        \r\n    }\r\n\r\n    function BarGroup(planets) {\r\n        return <g className=\"bar-group\">\r\n          <text className=\"name-label\">{planets.name}</text>\r\n          <rect />\r\n          <text className=\"value-label\">{planets.population}</text>\r\n        </g>\r\n      }\r\n    \r\n\r\n    \r\n    return (\r\n        <div>\r\n            this is part 2\r\n\r\n            <svg width=\"800\" height=\"300\" >\r\n                <g className=\"container\">\r\n                </g>\r\n            </svg>\r\n\r\n            {planets.map(planet => {\r\n               return <div>{planet.name} {planet.population}\r\n               </div> \r\n               \r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Part2\r\n"]},"metadata":{},"sourceType":"module"}