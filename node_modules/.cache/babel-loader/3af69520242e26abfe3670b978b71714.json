{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avidan.moshe\\\\Desktop\\\\Appleseeds\\\\Projects\\\\starw\\\\starw\\\\src\\\\Components\\\\Part1.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseEndpoint = `https://swapi.py4e.com/api`; //const usersEndpoint = `${baseEndpoint}/people`;\n//const plenetEndpoint = `${baseEndpoint}/planets`;\n\nfunction Part1() {\n  _s();\n\n  const [vehicles, setVehicles] = useState([]);\n  const [pilots, setPilots] = useState([]);\n  const [vehicle, setVehicle] = useState(null);\n  const [planet, setPlanet] = useState(null);\n  const [population, setPopulation] = useState(null);\n  const [pilot, setPilot] = useState(null);\n\n  const getVehicles = async () => {\n    const response = await axios.get(`${baseEndpoint}/vehicles`);\n    console.log(response.data.results);\n    setVehicles(response.data.results);\n  };\n\n  useEffect(() => {\n    getVehicles();\n  }, []);\n\n  async function getPlanet(pilotPlanet) {\n    const response = await axios.get(`${pilotPlanet}`);\n    console.log(response.data);\n    setPlanet(response.data.name);\n    setPopulation(response.data.population);\n  }\n\n  async function getPilotsDetails(allPilots) {\n    let pilotsDetailed = []; // for(let i = 0; i < allPilots.length; i++){\n    //     //console.log(allPilots[i])\n    //     pilotsDetailed.push(allPilots[i])\n    //     // const response = await axios.get(`${allPilots[i]}`)\n    //     // console.log(response)\n    //     // pilotsDetailed.push(response)\n    // }\n    // console.log(pilotsDetailed)\n\n    const response = await axios.get(`${allPilots[1][0]}`);\n    console.log(response.data.homeworld);\n    console.log(response.data.name);\n    setPilot(response.data.name);\n    let pilotPlanet = response.data.homeworld;\n    getPlanet(pilotPlanet); // const response2 = await axios.get(`${response.data.homeworld}`)\n    // console.log(response2.data)\n    //setPlanet(response2.data)\n    //console.log(planet.name)\n    // const response = await axios.get(`${allPilots[1]}`)\n    // console.log(response.data.homeworld)\n    // const response2 = await axios.get(`${response.data.homeworld}`)\n    // console.log(response2.data.population)\n  } // const getPilotsDetails = async(allPilots) =>{\n  //     const response = await axios.get(pilot)\n  //     allPilots.forEach(pilot =>{\n  //     })\n  // }\n  //get the pilots\n\n\n  function getPilots(vehiclesWithPilots) {\n    //console.log(vehiclesWithPilots)\n    let allPilots = [];\n    vehiclesWithPilots.forEach(vehicle => {\n      allPilots.push(vehicle.pilots);\n    });\n    console.log(allPilots);\n    getPilotsDetails(allPilots); //const response = await axios.get(vehiclesWithPilots.)\n  } //find which vehicles are assigned with pilots\n\n\n  function findPilots(vehicles) {\n    let vehiclesWithPilots = [];\n    vehiclesWithPilots = vehicles.filter(vehicle => vehicle.pilots.length >= 1); //console.log(vehiclesWithPilots)\n\n    getPilots(vehiclesWithPilots);\n  }\n\n  findPilots(vehicles);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Part 1:\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: planet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: population\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: pilot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: vehicles[1].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Part1, \"PjmtCpx6DhyxXvsu82ihuN87Ql8=\");\n\n_c = Part1;\nexport default Part1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Part1\");","map":{"version":3,"sources":["C:/Users/avidan.moshe/Desktop/Appleseeds/Projects/starw/starw/src/Components/Part1.jsx"],"names":["React","useState","useEffect","axios","baseEndpoint","Part1","vehicles","setVehicles","pilots","setPilots","vehicle","setVehicle","planet","setPlanet","population","setPopulation","pilot","setPilot","getVehicles","response","get","console","log","data","results","getPlanet","pilotPlanet","name","getPilotsDetails","allPilots","pilotsDetailed","homeworld","getPilots","vehiclesWithPilots","forEach","push","findPilots","filter","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAI,4BAAtB,C,CACA;AACA;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAuBV,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMiB,WAAW,GAAG,YAAU;AAE1B,UAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEhB,YAAa,WAA1B,CAAvB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,OAA1B;AAEAjB,IAAAA,WAAW,CAACY,QAAQ,CAACI,IAAT,CAAcC,OAAf,CAAX;AACH,GAND;;AAQAtB,EAAAA,SAAS,CAAC,MAAK;AAEXgB,IAAAA,WAAW;AAEd,GAJQ,EAIN,EAJM,CAAT;;AAOA,iBAAeO,SAAf,CAAyBC,WAAzB,EAAqC;AAEjC,UAAMP,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEM,WAAY,EAAzB,CAAvB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAV,IAAAA,SAAS,CAACM,QAAQ,CAACI,IAAT,CAAcI,IAAf,CAAT;AACAZ,IAAAA,aAAa,CAACI,QAAQ,CAACI,IAAT,CAAcT,UAAf,CAAb;AAEH;;AAGD,iBAAec,gBAAf,CAAiCC,SAAjC,EAA2C;AACvC,QAAIC,cAAc,GAAG,EAArB,CADuC,CAEvC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMX,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAES,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAgB,EAA7B,CAAvB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcQ,SAA1B;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcI,IAA1B;AACAV,IAAAA,QAAQ,CAACE,QAAQ,CAACI,IAAT,CAAcI,IAAf,CAAR;AAEA,QAAID,WAAW,GAAGP,QAAQ,CAACI,IAAT,CAAcQ,SAAhC;AACAN,IAAAA,SAAS,CAACC,WAAD,CAAT,CAlBuC,CAoBvC;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACH,GAlEY,CAoEb;AACA;AACA;AACA;AACA;AAGA;;;AACA,WAASM,SAAT,CAAmBC,kBAAnB,EAAsC;AAClC;AACA,QAAIJ,SAAS,GAAG,EAAhB;AAEAI,IAAAA,kBAAkB,CAACC,OAAnB,CAA2BxB,OAAO,IAAG;AACjCmB,MAAAA,SAAS,CAACM,IAAV,CAAezB,OAAO,CAACF,MAAvB;AACH,KAFD;AAIAa,IAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AACAD,IAAAA,gBAAgB,CAACC,SAAD,CAAhB,CATkC,CAUlC;AACH,GAvFY,CAyFb;;;AACA,WAASO,UAAT,CAAoB9B,QAApB,EAA6B;AACzB,QAAI2B,kBAAkB,GAAG,EAAzB;AACAA,IAAAA,kBAAkB,GAAG3B,QAAQ,CAAC+B,MAAT,CAAgB3B,OAAO,IAAIA,OAAO,CAACF,MAAR,CAAe8B,MAAf,IAAyB,CAApD,CAArB,CAFyB,CAGzB;;AACAN,IAAAA,SAAS,CAACC,kBAAD,CAAT;AAEH;;AACDG,EAAAA,UAAU,CAAC9B,QAAD,CAAV;AAKA,sBACI;AAAA,uCAKI;AAAA,gBAAMM;AAAN;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,gBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,gBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,gBAAMV,QAAQ,CAAC,CAAD,CAAR,CAAYqB;AAAlB;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GArHQtB,K;;KAAAA,K;AAuHT,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport axios from \"axios\"\r\n\r\nconst baseEndpoint = `https://swapi.py4e.com/api`;\r\n//const usersEndpoint = `${baseEndpoint}/people`;\r\n//const plenetEndpoint = `${baseEndpoint}/planets`;\r\n\r\nfunction Part1() {\r\n\r\n    const [vehicles, setVehicles] = useState([])\r\n    const [pilots, setPilots] = useState([])\r\n\r\n    const [vehicle, setVehicle] =useState(null)\r\n    const [planet, setPlanet] = useState(null)\r\n    const [population, setPopulation] = useState(null)\r\n    const [pilot, setPilot] = useState(null)\r\n\r\n    const getVehicles = async() =>{\r\n        \r\n        const response = await axios.get(`${baseEndpoint}/vehicles`)\r\n        console.log(response.data.results)\r\n\r\n        setVehicles(response.data.results)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        \r\n        getVehicles()\r\n        \r\n    }, [])\r\n\r\n\r\n    async function getPlanet(pilotPlanet){\r\n        \r\n        const response = await axios.get(`${pilotPlanet}`)\r\n        console.log(response.data)\r\n        setPlanet(response.data.name)\r\n        setPopulation(response.data.population)\r\n        \r\n    }\r\n\r\n\r\n    async function getPilotsDetails (allPilots){\r\n        let pilotsDetailed = []\r\n        // for(let i = 0; i < allPilots.length; i++){\r\n        //     //console.log(allPilots[i])\r\n\r\n        //     pilotsDetailed.push(allPilots[i])\r\n        //     // const response = await axios.get(`${allPilots[i]}`)\r\n        //     // console.log(response)\r\n        //     // pilotsDetailed.push(response)\r\n        // }\r\n        // console.log(pilotsDetailed)\r\n\r\n        const response = await axios.get(`${allPilots[1][0]}`)\r\n        console.log(response.data.homeworld)\r\n        console.log(response.data.name)\r\n        setPilot(response.data.name)\r\n\r\n        let pilotPlanet = response.data.homeworld\r\n        getPlanet(pilotPlanet)\r\n        \r\n        // const response2 = await axios.get(`${response.data.homeworld}`)\r\n        // console.log(response2.data)\r\n\r\n        //setPlanet(response2.data)\r\n        //console.log(planet.name)\r\n\r\n        // const response = await axios.get(`${allPilots[1]}`)\r\n        // console.log(response.data.homeworld)\r\n        \r\n        // const response2 = await axios.get(`${response.data.homeworld}`)\r\n        // console.log(response2.data.population)\r\n    }\r\n\r\n    // const getPilotsDetails = async(allPilots) =>{\r\n    //     const response = await axios.get(pilot)\r\n    //     allPilots.forEach(pilot =>{\r\n    //     })\r\n    // }\r\n\r\n\r\n    //get the pilots\r\n    function getPilots(vehiclesWithPilots){\r\n        //console.log(vehiclesWithPilots)\r\n        let allPilots = []\r\n\r\n        vehiclesWithPilots.forEach(vehicle =>{\r\n            allPilots.push(vehicle.pilots)\r\n        })\r\n\r\n        console.log(allPilots)\r\n        getPilotsDetails(allPilots)\r\n        //const response = await axios.get(vehiclesWithPilots.)\r\n    }\r\n\r\n    //find which vehicles are assigned with pilots\r\n    function findPilots(vehicles){\r\n        let vehiclesWithPilots = []\r\n        vehiclesWithPilots = vehicles.filter(vehicle => vehicle.pilots.length >= 1)\r\n        //console.log(vehiclesWithPilots)\r\n        getPilots(vehiclesWithPilots)\r\n        \r\n    }\r\n    findPilots(vehicles)\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            Part 1:\r\n            \r\n            \r\n\r\n            <div>{planet}</div>\r\n            <div>{population}</div>\r\n            <div>{pilot}</div>\r\n            <div>{vehicles[1].name}</div>\r\n            \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Part1\r\n"]},"metadata":{},"sourceType":"module"}